                            | #qianweike 521021910760
                            | # Execution begins at address 0 
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Array of 4 elements
0x018:                      | 	.align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 2800000000000000     | 	.quad ele2
0x028:                      | ele2:
0x028: b000000000000000     | 	.quad 0x0b0
0x030: 3800000000000000     | 	.quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     | 	.quad 0xc00
0x040: 0000000000000000     | 	.quad 0
                            | 
0x048: 30f71800000000000000 | main:	irmovq ele1,%rdi
0x052: 30f60800000000000000 | 	irmovq $8,%rsi
0x05c: 6300                 | 	xorq %rax,%rax
0x05e: 6266                 | 	andq %rsi,%rsi
0x060: 808e00000000000000   | 	call rsum_list
0x069: 90                   | 	ret
0x06a:                      | rsum_bef:
0x06a: 50a70000000000000000 | 	mrmovq (%rdi),%r10
0x074: 6067                 | 	addq %rsi,%rdi
0x076: 50970000000000000000 | 	mrmovq (%rdi),%r9
0x080: 2097                 | 	rrmovq %r9,%rdi
0x082: 60a0                 | 	addq %r10,%rax
0x084: 708e00000000000000   | 	jmp rsum_list
0x08d: 90                   | 	ret
0x08e:                      | rsum_list:   #%rdi as position,sum add to %rax
0x08e: 6277                 | 	andq %rdi,%rdi
0x090: 746a00000000000000   | 	jne rsum_bef
0x099: 90                   | 	ret
                            | 
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:
