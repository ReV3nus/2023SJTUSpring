                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4a805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f62803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f72001000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #qianweike 521021910760
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: 6222                 | 	andq %rdx,%rdx		# len <= 0?
0x036: 711b01000000000000   | 	jle Done		# if so, goto Done:
0x03f: c0f2ffffffffffffffff | 	iaddq $-1,%rdx
0x049: 73df00000000000000   | 	je ELoop
0x052: 50a70000000000000000 | Loop:	mrmovq (%rdi), %r10	# read val from src...
0x05c: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x066: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x068: 717b00000000000000   | 	jle Npos1		# if so, goto Npos:
0x071: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x07b: c0f70800000000000000 | Npos1:	iaddq $8, %rdi		# src++
0x085: c0f60800000000000000 | 	iaddq $8, %rsi		# dst++
                            | 	
                            | 	
0x08f: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x099: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x0a3: 62aa                 | 	andq %r10, %r10
0x0a5: 71b800000000000000   | 	jle Npos2
0x0ae: c0f00100000000000000 | 	iaddq $1, %rax
0x0b8: c0f70800000000000000 | Npos2:	iaddq $8, %rdi
0x0c2: c0f60800000000000000 | 	iaddq $8, %rsi
                            | 
0x0cc: c0f2feffffffffffffff | 	iaddq $-2,%rdx		# len- > 0?
0x0d6: 765200000000000000   | 	jg Loop			# if so, goto Loop:
0x0df: c0f20100000000000000 | ELoop:	iaddq $1,%rdx
0x0e9: 711b01000000000000   | 	jle Done
0x0f2: 50a70000000000000000 | 	mrmovq (%rdi),%r10
0x0fc: 40a60000000000000000 | 	rmmovq %r10,(%rsi)
0x106: 62aa                 | 	andq %r10,%r10
0x108: 711b01000000000000   | 	jle Done
0x111: c0f00100000000000000 | 	iaddq $1,%rax
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x11b:                      | Done:
0x11b: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x11c:                      | End:
                            | #/* $end ncopy-ys */
0x11c:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x120:                      | 	.align 8
0x120:                      | src:
0x120: 0100000000000000     | 	.quad 1
0x128: feffffffffffffff     | 	.quad -2
0x130: 0300000000000000     | 	.quad 3
0x138: fcffffffffffffff     | 	.quad -4
0x140: 0500000000000000     | 	.quad 5
0x148: 0600000000000000     | 	.quad 6
0x150: 0700000000000000     | 	.quad 7
0x158: f8ffffffffffffff     | 	.quad -8
0x160: f7ffffffffffffff     | 	.quad -9
0x168: 0a00000000000000     | 	.quad 10
0x170: 0b00000000000000     | 	.quad 11
0x178: 0c00000000000000     | 	.quad 12
0x180: f3ffffffffffffff     | 	.quad -13
0x188: 0e00000000000000     | 	.quad 14
0x190: f1ffffffffffffff     | 	.quad -15
0x198: f0ffffffffffffff     | 	.quad -16
0x1a0: efffffffffffffff     | 	.quad -17
0x1a8: 1200000000000000     | 	.quad 18
0x1b0: edffffffffffffff     | 	.quad -19
0x1b8: ecffffffffffffff     | 	.quad -20
0x1c0: ebffffffffffffff     | 	.quad -21
0x1c8: eaffffffffffffff     | 	.quad -22
0x1d0: e9ffffffffffffff     | 	.quad -23
0x1d8: 1800000000000000     | 	.quad 24
0x1e0: e7ffffffffffffff     | 	.quad -25
0x1e8: 1a00000000000000     | 	.quad 26
0x1f0: e5ffffffffffffff     | 	.quad -27
0x1f8: e4ffffffffffffff     | 	.quad -28
0x200: e3ffffffffffffff     | 	.quad -29
0x208: 1e00000000000000     | 	.quad 30
0x210: 1f00000000000000     | 	.quad 31
0x218: 2000000000000000     | 	.quad 32
0x220: dfffffffffffffff     | 	.quad -33
0x228: deffffffffffffff     | 	.quad -34
0x230: 2300000000000000     | 	.quad 35
0x238: 2400000000000000     | 	.quad 36
0x240: dbffffffffffffff     | 	.quad -37
0x248: daffffffffffffff     | 	.quad -38
0x250: 2700000000000000     | 	.quad 39
0x258: d8ffffffffffffff     | 	.quad -40
0x260: d7ffffffffffffff     | 	.quad -41
0x268: d6ffffffffffffff     | 	.quad -42
0x270: d5ffffffffffffff     | 	.quad -43
0x278: 2c00000000000000     | 	.quad 44
0x280: 2d00000000000000     | 	.quad 45
0x288: d2ffffffffffffff     | 	.quad -46
0x290: 2f00000000000000     | 	.quad 47
0x298: d0ffffffffffffff     | 	.quad -48
0x2a0: cfffffffffffffff     | 	.quad -49
0x2a8: 3200000000000000     | 	.quad 50
0x2b0: 3300000000000000     | 	.quad 51
0x2b8: 3400000000000000     | 	.quad 52
0x2c0: 3500000000000000     | 	.quad 53
0x2c8: 3600000000000000     | 	.quad 54
0x2d0: 3700000000000000     | 	.quad 55
0x2d8: 3800000000000000     | 	.quad 56
0x2e0: c7ffffffffffffff     | 	.quad -57
0x2e8: 3a00000000000000     | 	.quad 58
0x2f0: c5ffffffffffffff     | 	.quad -59
0x2f8: c4ffffffffffffff     | 	.quad -60
0x300: 3d00000000000000     | 	.quad 61
0x308: c2ffffffffffffff     | 	.quad -62
0x310: 3f00000000000000     | 	.quad 63
0x318: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x320:                      | 	.align 16
0x320:                      | Predest:
0x320: fadebc0000000000     | 	.quad 0xbcdefa
0x328:                      | dest:
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520:                      | Postdest:
0x520: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x528:                      | .align 8
                            | # Run time stack
0x528: 0000000000000000     | 	.quad 0
0x530: 0000000000000000     | 	.quad 0
0x538: 0000000000000000     | 	.quad 0
0x540: 0000000000000000     | 	.quad 0
0x548: 0000000000000000     | 	.quad 0
0x550: 0000000000000000     | 	.quad 0
0x558: 0000000000000000     | 	.quad 0
0x560: 0000000000000000     | 	.quad 0
0x568: 0000000000000000     | 	.quad 0
0x570: 0000000000000000     | 	.quad 0
0x578: 0000000000000000     | 	.quad 0
0x580: 0000000000000000     | 	.quad 0
0x588: 0000000000000000     | 	.quad 0
0x590: 0000000000000000     | 	.quad 0
0x598: 0000000000000000     | 	.quad 0
0x5a0: 0000000000000000     | 	.quad 0
                            | 
0x5a8:                      | Stack:
